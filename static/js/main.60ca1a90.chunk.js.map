{"version":3,"sources":["components/Button/Button.js","components/services/ImageApi.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["Button","fetchImages","type","onClick","className","API_KEY","API_URL","query","page","a","searchParams","URLSearchParams","key","q","per_page","image_type","orientation","url","fetch","fetchImg","json","images","imageApi","Searchbar","state","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleQuerySubmit","preventDefault","trim","props","onSubmit","toast","error","this","autoComplete","autoFocus","placeholder","onChange","Component","ImageGaleryItem","image","openModal","webformatURL","tags","id","src","alt","ImageGalerry","map","MODAL_ROOT","document","querySelector","Modal","handleOnClose","e","code","onClose","window","addEventListener","createPortal","children","LoaderSpin","color","height","width","timeout","App","modalImage","modalImageID","isLoading","onSearch","loadMore","prevState","onOpenModal","Number","closeModal","imageFind","find","prevProps","then","img","hits","catch","Error","finally","scrollTo","top","documentElement","scrollHeight","behavior","console","log","Loader","autoclose","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60ca1a90.chunk.js","sourcesContent":["const Button = ({ fetchImages }) => {\r\n  return (\r\n    <button type=\"button\" onClick={fetchImages} className=\"Button\">\r\n      Load more...\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const API_KEY = '19045018-7ef62a7ed2607017cbe478eaf';\r\nconst API_URL = 'https://pixabay.com/api/';\r\n\r\nasync function fetchImages(query, page) {\r\n  const searchParams = new URLSearchParams({\r\n    key: API_KEY,\r\n    q: query,\r\n    page: page,\r\n    per_page: 12,\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n  });\r\n\r\n  const url = `${API_URL}?${searchParams}`;\r\n\r\n  const fetchImg = await fetch(url);\r\n  const images = await fetchImg.json();\r\n\r\n  return images;\r\n}\r\n\r\nconst imageApi = { fetchImages };\r\n\r\nexport default imageApi;\r\n","import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleQueryChange = event => {\r\n    this.setState({ query: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleQuerySubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.query.trim() === '') {\r\n      toast.error('Самурай! Напиши запрос!');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.query);\r\n\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleQuerySubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleQueryChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","const ImageGaleryItem = ({ image, openModal }) => {\r\n  const { webformatURL, tags } = image;\r\n\r\n  return (\r\n    <li id={image.id} onClick={openModal} className=\"ImageGalleryItem\">\r\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGaleryItem;\r\n","import React from 'react';\r\nimport ImageGaleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nfunction ImageGalerry({ images, openModal }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(image => (\r\n          <ImageGaleryItem openModal={openModal} key={image.id} image={image} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGalerry;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst MODAL_ROOT = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleOnClose);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener('keydown', this.handleOnClose);\r\n  }\r\n\r\n  handleOnClose = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div onClick={this.props.onClose} className=\"Overlay\">\r\n        <div>{this.props.children}</div>\r\n      </div>,\r\n      MODAL_ROOT,\r\n    );\r\n  }\r\n}\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst LoaderSpin = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Circles\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoaderSpin;\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Button from './components/Button/Button';\nimport imageApi from './components/services/ImageApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGalerry from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport LoaderSpin from './components/Loader/Loader';\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    query: null,\n    modalImage: [],\n    modalImageID: null,\n    openModal: false,\n    isLoading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.query !== this.state.query ||\n      prevState.page !== this.state.page\n    ) {\n      this.fetchImg();\n    }\n  }\n\n  onSearch = query => {\n    this.setState({ query, images: [], page: 1 });\n  };\n\n  fetchImg() {\n    const { query, page, images } = this.state;\n    this.setState({ isLoading: true });\n    imageApi\n      .fetchImages(query, page)\n      .then(img =>\n        this.setState({\n          images: [...images, ...img.hits],\n          page: page,\n        }),\n      )\n      .catch(error => {\n        throw new Error(error);\n      })\n      .finally(\n        this.setState({ isLoading: false }),\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        }),\n      );\n  }\n\n  loadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  onOpenModal = e => {\n    this.setState({\n      openModal: true,\n      modalImageID: Number(e.currentTarget.id),\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ openModal: false });\n  };\n\n  imageFind = () => {\n    const largeImg = this.state.images.find(image => {\n      return image.id === this.state.modalImageID;\n    });\n\n    return largeImg;\n  };\n\n  render() {\n    console.log(this.state.images);\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onSearch} />\n        <ImageGalerry openModal={this.onOpenModal} images={this.state.images} />\n        {this.state.isLoading && <LoaderSpin />}\n        <Button fetchImages={this.loadMore} />,\n        <ToastContainer autoclose={3000} />\n        {this.state.openModal && (\n          <Modal id={this.state.modalImageID} onClose={this.closeModal}>\n            <img\n              src={this.imageFind().largeImageURL}\n              alt={this.imageFind().tags}\n            ></img>\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}